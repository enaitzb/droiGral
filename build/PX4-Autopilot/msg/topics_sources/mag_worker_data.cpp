/****************************************************************************
 *
 *   Copyright (C) 2013-2016 PX4 Development Team. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name PX4 nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

/* Auto-generated by genmsg_cpp from file mag_worker_data.msg */


#include <inttypes.h>
#include <px4_platform_common/log.h>
#include <px4_platform_common/defines.h>
#include <uORB/topics/mag_worker_data.h>
#include <uORB/topics/uORBTopics.hpp>
#include <drivers/drv_hrt.h>
#include <lib/drivers/device/Device.hpp>
#include <lib/matrix/matrix/math.hpp>
#include <lib/mathlib/mathlib.h>

constexpr char __orb_mag_worker_data_fields[] = "uint64_t timestamp;uint64_t timestamp_sample;uint64_t calibration_interval_perside_us;uint32_t done_count;uint32_t calibration_points_perside;uint32_t[4] calibration_counter_total;float[4] x;float[4] y;float[4] z;bool[4] side_data_collected;uint8_t[4] _padding0;";

ORB_DEFINE(mag_worker_data, struct mag_worker_data_s, 100, __orb_mag_worker_data_fields, static_cast<uint8_t>(ORB_ID::mag_worker_data));


void print_message(const mag_worker_data_s &message)
{

	PX4_INFO_RAW(" mag_worker_data_s\n");

	const hrt_abstime now = hrt_absolute_time();

	if (message.timestamp != 0) {
		PX4_INFO_RAW("\ttimestamp: %" PRIu64 "  (%.6f seconds ago)\n", message.timestamp, (now - message.timestamp) / 1e6);
	} else {
		PX4_INFO_RAW("\n");
	}
	
	PX4_INFO_RAW("\ttimestamp_sample: %" PRIu64 "  (%" PRIu64 " us before timestamp)\n", message.timestamp_sample, message.timestamp - message.timestamp_sample);
	
	PX4_INFO_RAW("\tcalibration_interval_perside_us: %" PRIu64 "\n", message.calibration_interval_perside_us);
	PX4_INFO_RAW("\tdone_count: %" PRIu32 "\n", message.done_count);
	PX4_INFO_RAW("\tcalibration_points_perside: %" PRIu32 "\n", message.calibration_points_perside);
	PX4_INFO_RAW("\tcalibration_counter_total: [%" PRIu32 ", %" PRIu32 ", %" PRIu32 ", %" PRIu32 "]\n", message.calibration_counter_total[0], message.calibration_counter_total[1], message.calibration_counter_total[2], message.calibration_counter_total[3]);
	PX4_INFO_RAW("\tx: [%.4f, %.4f, %.4f, %.4f]\n", (double)message.x[0], (double)message.x[1], (double)message.x[2], (double)message.x[3]);
	PX4_INFO_RAW("\ty: [%.4f, %.4f, %.4f, %.4f]\n", (double)message.y[0], (double)message.y[1], (double)message.y[2], (double)message.y[3]);
	PX4_INFO_RAW("\tz: [%.4f, %.4f, %.4f, %.4f]\n", (double)message.z[0], (double)message.z[1], (double)message.z[2], (double)message.z[3]);
	PX4_INFO_RAW("\tside_data_collected: [%u, %u, %u, %u]\n", message.side_data_collected[0], message.side_data_collected[1], message.side_data_collected[2], message.side_data_collected[3]);
	
}
