/****************************************************************************
 *
 *   Copyright (C) 2013-2016 PX4 Development Team. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name PX4 nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

/* Auto-generated by genmsg_cpp from file mission_result.msg */


#include <inttypes.h>
#include <px4_platform_common/log.h>
#include <px4_platform_common/defines.h>
#include <uORB/topics/mission_result.h>
#include <uORB/topics/uORBTopics.hpp>
#include <drivers/drv_hrt.h>
#include <lib/drivers/device/Device.hpp>
#include <lib/matrix/matrix/math.hpp>
#include <lib/mathlib/mathlib.h>

constexpr char __orb_mission_result_fields[] = "uint64_t timestamp;uint32_t instance_count;int32_t seq_reached;uint16_t seq_current;uint16_t seq_total;uint16_t item_changed_index;uint16_t item_do_jump_remaining;bool valid;bool warning;bool finished;bool failure;bool stay_in_failsafe;bool flight_termination;bool item_do_jump_changed;uint8_t execution_mode;";

ORB_DEFINE(mission_result, struct mission_result_s, 32, __orb_mission_result_fields, static_cast<uint8_t>(ORB_ID::mission_result));


void print_message(const mission_result_s &message)
{

	PX4_INFO_RAW(" mission_result_s\n");

	const hrt_abstime now = hrt_absolute_time();

	if (message.timestamp != 0) {
		PX4_INFO_RAW("\ttimestamp: %" PRIu64 "  (%.6f seconds ago)\n", message.timestamp, (now - message.timestamp) / 1e6);
	} else {
		PX4_INFO_RAW("\n");
	}
	PX4_INFO_RAW("\tinstance_count: %" PRIu32 "\n", message.instance_count);
	PX4_INFO_RAW("\tseq_reached: %" PRId32 "\n", message.seq_reached);
	PX4_INFO_RAW("\tseq_current: %u\n", message.seq_current);
	PX4_INFO_RAW("\tseq_total: %u\n", message.seq_total);
	PX4_INFO_RAW("\titem_changed_index: %u\n", message.item_changed_index);
	PX4_INFO_RAW("\titem_do_jump_remaining: %u\n", message.item_do_jump_remaining);
	PX4_INFO_RAW("\tvalid: %s\n", (message.valid ? "True" : "False"));
	PX4_INFO_RAW("\twarning: %s\n", (message.warning ? "True" : "False"));
	PX4_INFO_RAW("\tfinished: %s\n", (message.finished ? "True" : "False"));
	PX4_INFO_RAW("\tfailure: %s\n", (message.failure ? "True" : "False"));
	PX4_INFO_RAW("\tstay_in_failsafe: %s\n", (message.stay_in_failsafe ? "True" : "False"));
	PX4_INFO_RAW("\tflight_termination: %s\n", (message.flight_termination ? "True" : "False"));
	PX4_INFO_RAW("\titem_do_jump_changed: %s\n", (message.item_do_jump_changed ? "True" : "False"));
	PX4_INFO_RAW("\texecution_mode: %u\n", message.execution_mode);

}
