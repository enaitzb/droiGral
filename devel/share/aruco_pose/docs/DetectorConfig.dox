\subsubsection parameters ROS parameters

Reads and maintains the following parameters on the ROS server

- \b "~enabled" : \b [bool] if detection enabled min: False, default: True, max: True
- \b "~adaptiveThreshConstant" : \b [double] Constant for adaptive thresholding before finding contours min: 0.0, default: 7.0, max: 100.0
- \b "~adaptiveThreshWinSizeMin" : \b [int] Minimum window size for adaptive thresholding before finding contours min: 1, default: 3, max: 100
- \b "~adaptiveThreshWinSizeMax" : \b [int] Maximum window size for adaptive thresholding before finding contours min: 1, default: 23, max: 100
- \b "~adaptiveThreshWinSizeStep" : \b [int] Increments from adaptiveThreshWinSizeMin to adaptiveThreshWinSizeMax during the thresholding min: 1, default: 10, max: 100
- \b "~cornerRefinementMaxIterations" : \b [int] Maximum number of iterations for stop criteria of the corner refinement process min: 1, default: 30, max: 1000
- \b "~cornerRefinementMethod" : \b [int] Corner refinement method min: 0, default: 0, max: 3
- \b "~cornerRefinementMinAccuracy" : \b [double] Minimum error for the stop criteria of the corner refinement process min: 0.0, default: 0.1, max: 1.0
- \b "~cornerRefinementWinSize" : \b [int] Window size for the corner refinement process (in pixels) min: 1, default: 5, max: 100
- \b "~detectInvertedMarker" : \b [bool] check if there is a white marker. In order to generate a 'white' marker just invert a normal marker by using a tilde min: False, default: False, max: True
- \b "~errorCorrectionRate" : \b [double] Error correction rate respect to the maximum error correction capability for each dictionary min: 0.0, default: 0.6, max: 1.0
- \b "~minCornerDistanceRate" : \b [double] Minimum distance between corners for detected markers relative to its perimeter min: 0.0, default: 0.05, max: 0.25
- \b "~markerBorderBits" : \b [int] Number of bits of the marker border, i.e. marker border width min: 1, default: 1, max: 10
- \b "~maxErroneousBitsInBorderRate" : \b [double] Maximum number of accepted erroneous bits in the border (i.e. number of allowed white bits in the border) min: 0.0, default: 0.35, max: 1.0
- \b "~minDistanceToBorder" : \b [int] Minimum distance of any corner to the image border for detected markers (in pixels) min: 0, default: 3, max: 1000
- \b "~minMarkerDistanceRate" : \b [double] minimum mean distance beetween two marker corners to be considered similar, so that the smaller one is removed. The rate is relative to the smaller perimeter of the two markers min: 0.0, default: 0.05, max: 1.0
- \b "~minMarkerPerimeterRate" : \b [double] Determine minimum perimeter for marker contour to be detected. This is defined as a rate respect to the maximum dimension of the input image min: 0.0, default: 0.03, max: 4.0
- \b "~maxMarkerPerimeterRate" : \b [double] Determine maximum perimeter for marker contour to be detected. This is defined as a rate respect to the maximum dimension of the input image min: 0.0, default: 4.0, max: 4.0
- \b "~minOtsuStdDev" : \b [double] Minimun standard deviation in pixels values during the decodification step to apply Otsu thresholding (otherwise, all the bits are set to 0 or 1 depending on mean higher than 128 or not) min: 0.0, default: 5.0, max: 100.0
- \b "~perspectiveRemoveIgnoredMarginPerCell" : \b [double] Width of the margin of pixels on each cell not considered for the determination of the cell bit. Represents the rate respect to the total size of the cell, i.e. perpectiveRemovePixelPerCell min: 0.0, default: 0.13, max: 1.0
- \b "~perspectiveRemovePixelPerCell" : \b [int] Number of bits (per dimension) for each cell of the marker when removing the perspective min: 1, default: 4, max: 100
- \b "~polygonalApproxAccuracyRate" : \b [double] Minimum accuracy during the polygonal approximation process to determine which contours are squares min: 0.0, default: 0.03, max: 1.0
- \b "~aprilTagQuadDecimate" : \b [double] Detection of quads can be done on a lower-resolution image, improving speed at a cost of pose accuracy and a slight decrease in detection rate. Decoding the binary payload is still done at full resolution min: 0.0, default: 0.0, max: 1000.0
- \b "~aprilTagQuadSigma" : \b [double] What Gaussian blur should be applied to the segmented image (used for quad detection?) Parameter is the standard deviation in pixels. Very noisy images benefit from non-zero values min: 0.0, default: 0.0, max: 1000.0

